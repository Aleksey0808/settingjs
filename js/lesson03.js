//task 1
  /*
  –°—Ç–≤–æ—Ä—ñ—Ç—å –º–∞—Å–∏–≤ genres –∑ –µ–ª–µ–º–µ–Ω—Ç–∞–º–∏ "Jazz" —Ç–∞ "Blues".
  –î–æ–¥–∞–π—Ç–µ ¬´–†–æ–∫-–Ω-—Ä–æ–ª¬ª –¥–æ –∫—ñ–Ω—Ü—è.
  –í–∏–≤–µ–¥—ñ—Ç—å —É –∫–æ–Ω—Å–æ–ª—å –ø–µ—Ä—à–∏–π –µ–ª–µ–º–µ–Ω—Ç –º–∞—Å–∏–≤—É.
  –í–∏–≤–µ–¥—ñ—Ç—å –æ—Å—Ç–∞–Ω–Ω—ñ–π –µ–ª–µ–º–µ–Ω—Ç –º–∞—Å–∏–≤—É –≤ –∫–æ–Ω—Å–æ–ª—å. –ö–æ–¥ –ø–æ–≤–∏–Ω–µ–Ω –ø—Ä–∞—Ü—é–≤–∞—Ç–∏ –¥–ª—è –º–∞—Å–∏–≤—É –¥–æ–≤—ñ–ª—å–Ω–æ—ó –¥–æ–≤–∂–∏–Ω–∏.
  –í–∏–¥–∞–ª—ñ—Ç—å –ø–µ—Ä—à–∏–π –µ–ª–µ–º–µ–Ω—Ç —Ç–∞ –≤–∏–≤–µ–¥—ñ—Ç—å –π–æ–≥–æ –≤ –∫–æ–Ω—Å–æ–ª—å.
  –í—Å—Ç–∞–≤—Ç–µ ¬´Country¬ª —Ç–∞ ¬´Reggae¬ª –Ω–∞ –ø–æ—á–∞—Ç–æ–∫ –º–∞—Å–∏–≤—É.
 */

// const genres = ["Jazz", "Blues"]
// console.log(genres);

// genres.push('–†–æ–∫-–Ω-—Ä–æ–ª');
// console.log(genres);

// genres.shift();
// console.log(genres);

// genres.splice(0, 0, 'Country', 'Reggae');
// console.log(genres);

//task 2
// –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç –¥–ª—è –≤—ã—á–∏—Å–ª–µ–Ω–∏—è –ø–ª–æ—â–∞–¥–∏ –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞ —Å–æ —Å—Ç–æ—Ä–æ–Ω–∞–º–∏, –∑–Ω–∞—á–µ–Ω–∏—è –∫–æ—Ç–æ—Ä—ã—Ö —Ö—Ä–∞–Ω—è—Ç—Å—è –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π values –≤ –≤–∏–¥–µ —Å—Ç—Ä–æ–∫–∏. –ó–Ω–∞—á–µ–Ω–∏—è –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ —Ä–∞–∑–¥–µ–ª–µ–Ω—ã –ø—Ä–æ–±–µ–ª–æ–º.

// const values = '8 11';

// let sides = values.split(" ");

// const square = sides[0] * sides[1];

// console.log(square);

// task 3

// –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø–µ—Ä–µ–±–æ—Ä–∞ –º–∞—Å—Å–∏–≤–∞ fruits —Ü–∏–∫–ª–æ–º for. –î–ª—è –∫–∞–∂–¥–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –º–∞—Å—Å–∏–≤–∞ –≤—ã–≤–µ–¥–∏ –≤ –∫–æ–Ω—Å–æ–ª—å —Å—Ç—Ä–æ–∫—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ –Ω–æ–º–µ—Ä_—ç–ª–µ–º–µ–Ω—Ç–∞: –∑–Ω–∞—á–µ–Ω–∏–µ_—ç–ª–µ–º–µ–Ω—Ç–∞. –ù—É–º–µ—Ä–∞—Ü–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –¥–æ–ª–∂–Ω–∞ –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å 1.

// const fruits = ['üçé', 'üçá', 'üçë', 'üçå', 'üçã'];

// for (let i = 0; i <= fruits.length -1; i += 1) {
//   console.log(`# ${i + 1} ${fruits[i]}`);
// }

//task 4
// –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç –∫–æ—Ç–æ—Ä—ã–π –≤—ã–≤–æ–¥–∏—Ç –≤ –∫–æ–Ω—Å–æ–ª—å –∏–º—è –∏ —Ç–µ–ª–µ—Ñ–æ–Ω–Ω—ã–π –Ω–æ–º–µ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –í –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö names –∏ phones —Ö—Ä–∞–Ω—è—Ç—Å—è —Å—Ç—Ä–æ–∫–∏ –∏–º–µ–Ω –∏ —Ç–µ–ª–µ—Ñ–æ–Ω–Ω—ã—Ö –Ω–æ–º–µ—Ä–æ–≤, —Ä–∞–∑–¥–µ–ª–µ–Ω–Ω—ã–µ –∑–∞–ø—è—Ç—ã–º–∏. –ü–æ—Ä—è–¥–∫–æ–≤—ã–π –Ω–æ–º–µ—Ä –∏–º–µ–Ω –∏ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤ –≤ —Å—Ç—Ä–æ–∫–∞—Ö —É–∫–∞–∑—ã–≤–∞—é—Ç –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ. –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–º–µ–Ω –∏ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤ –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ –æ–¥–∏–Ω–∞–∫–æ–≤–æ–µ.

// const names = 'Jacob, William, Solomon, Artemis';
// const phones = '89001234567,89001112233,890055566377,890055566300';

// const namesArray = names.split(', ');
//  console.log(namesArray);

// const phoneArrays = phones.split(',');
// console.log(phoneArrays);

// for (let i = 0; i < namesArray.length; i += 1) {
//   console.log(`${namesArray[i]} - ${phoneArrays[i]}`)
// }

//task 5
/*
* –í–∏–≤–µ—Å—Ç–∏ –≤—Å—ñ —Å–ª–æ–≤–∞ –∫—Ä—ñ–º –ø–µ—Ä—à–æ–≥–æ —ñ –æ—Å—Ç–∞–Ω–Ω—å–æ–≥–æ.
 * –ú–∞—î –ø—Ä–∞—Ü—é–≤–∞—Ç–∏ –¥–ª—è –±—É–¥—å —è–∫–æ–≥–æ —Ä—è–¥–∫–∞.
 * 1. –†–æ–∑–±–∏–≤–∞—î–º–æ —Ä—è–¥–æ–∫ –Ω–∞ –º–∞—Å–∏–≤ –ø–æ –ø—Ä–æ–±—ñ–ª—É(–∫–æ–∂–Ω–µ —Å–ª–æ–≤–æ - –æ–∫—Ä–µ–º–∏–π –µ–ª–µ–º–µ–Ω—Ç –º–∞—Å–∏–≤–∞)
 * 2. –ú–µ—Ç–æ–¥–æ–º splice - –∑–º—ñ–Ω—é—î–º–æ –º–∞—Å–∏–≤ –≤–∏–¥–∞–ª—è—é—á–∏ –∑ –Ω—å–æ–≥–æ –≤—Å—ñ –µ–ª–µ–º–µ–Ω—Ç–∏ –∫—Ä—ñ–º –ø–µ—Ä—à–æ–≥–æ —ñ —Å–æ—Ç–∞–Ω–Ω—å–æ–≥–æ
 *    splice(—ñ–Ω–¥–µ–∫—Å –∑ —è–∫–æ–≥–æ –ø–æ—á–∏–Ω–∞—Ç–∏, –∫—ñ–ª—å–∫—ñ—Å—Ç—å –µ–ª–µ–º–µ–Ω—Ç—ñ–≤)
 * 3. slice –ø–æ–≤–µ—Ä—Ç–∞—î –º–∞—Å–∏–≤ –∑ –≤–∏–¥–∞–ª–µ–Ω–∏–º–∏ –µ–ª–µ–º–µ–Ω—Ç–∞–º–∏
 * 4. –ó–±–∏—Ä–∞—î–º–æ –æ—Ç—Ä–∏–º–∞–Ω–∏–π –º–∞—Å–∏–≤ –≤ —Ä—è–¥–æ–∫ 
 * 
 * Note: –î–ª—è –º–µ—Ç–æ–¥–∞ slice –ø–µ—Ä—à–∏–º –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º(–ø–æ—á–∞—Ç–∫–æ–º) –±—É–¥–µ –µ–ª–µ–º–µ–Ω—Ç –∑ —ñ–Ω–¥–µ–∫—Å–æ–º 1(–¥—Ä—É–≥–∏–π –µ–ª–µ–º–µ–Ω—Ç –º–∞—Å–∏–≤–∞).
 * –ê–ª–µ —è–∫ –≤–∏–∑–Ω–∞—á–∏—Ç–∏ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ –¥–ª—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è:
 *  –í—Å—å–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ –≤ –º–∞—Å–∏–≤—ñ "words.length". –Ø–∫—â–æ –± —Ç—Ä–µ–±–∞ –±—É–ª–æ –≤–∏–¥–∞–ª–∏—Ç–∏ –≤—Å–µ, —Ç–æ –ø—ñ–¥—ñ–π—à–ª–æ –±.
 *  –ê–ª–µ –ø–µ—Ä—à–∏–π –º–∏ –≤–∂–µ –≤—ñ–¥–∫–∏–¥—É—î–º–æ, —Ç–æ–º—É –±–µ—Ä–µ–º "words.length - 1".
 *  –¢–µ–ø–µ—Ä, –∑ —É–º–æ–≤–æ—é –∑–∞–¥–∞—á—ñ, —Ç—Ä–µ–±–∞ –≤—ñ–¥–∫–∏–Ω—É—Ç–∏ —ñ –æ—Å—Ç–∞–Ω–Ω—ñ–π. –¢–æ–±—Ç–æ –≤—ñ–¥–Ω—è—Ç–∏ —â–µ –æ–¥–∏–Ω–∏—Ü—é.
 *  –¢–æ–º—É –≤–∏–π–¥–µ "words.length - 2"
 */

// const string = 'Welcome to the future. Hello my name is Stepan';

// const word = string.split(' ');
// console.log(word);
// const newArray = word.splice(0, 1);
// word.pop();
// const wordString = word.join();
// console.log(wordString);

//or
// const amountToDelete = word.length - 2;
// const deletedWords = word.splice(1, amountToDelete );
// console.log(deletedWords)

// task 6

/**
 * Task 6. –í–∏–≤–µ—Å—Ç–∏ –≤ –∫–æ–Ω—Å–æ–ª—å —Ä—è–¥–æ–∫ –∑–∞–¥–æ–º –Ω–∞ –ø–µ—Ä–µ–¥
 * 1. –†–æ–∑–±–∏–≤–∞—î–º–æ —Ä—è–¥–æ–∫ –Ω–∞ –º–∞—Å–∏–≤ –ø–æ—Å–∏–º–≤–æ–ª—å–Ω–æ(–∫–æ–∂–µ–Ω —Å–∏–º–≤–æ–ª —Ä—è–¥–∫–∞ - –æ–∫—Ä–µ–º–∏–π –µ–ª–µ–º–µ–Ω—Ç –º–∞—Å–∏–≤–∞)
 * 2. –ú–µ—Ç–æ–¥–æ–º reverse, —Ä–æ–∑–≤–µ—Ä—Ç–∞—î–º–æ –º–∞—Å–∏–≤ —Å–∑–∞–¥—É –Ω–∞–ø–µ—Ä–µ–¥([a,b,c] -> [c,b,a])
 * 3. –ó–±–∏—Ä–∞—î–º–æ –≤–∂–µ –ø–µ—Ä–µ–≤–µ—Ä–Ω—É—Ç–∏–π –º–∞—Å–∏–≤ –≤ –Ω–æ–≤–∏–π —Ä—è–¥–æ–∫
 */

// const string = 'Welcome to the future';

// let arrayString = string.split(' ');

// arrayString.reverse();

// let stringReverse = arrayString.join(" ");
//  console.log(stringReverse);

// variant 2

// let newStr = '';
//  for (let i = string.length - 1; i >= 0; i -= 1) {
//   newStr += string[i];
//  }

//  console.log(newStr)

/**
 * Task 7. –í—ñ–¥—Å–æ—Ä—Ç—É–≤–∞—Ç–∏ –º–∞—Å–∏–≤
 */

// const langs = ['python', 'javascript', 'c++', 'haskel', 'php', 'ruby'];
// console.log(langs)
// langs.sort()
// console.log(langs)

/**
 * Task 8 repeta
 * –ó–Ω–∞–π—Ç–∏ –Ω–∞–π–º–µ–Ω—à–µ –∑–Ω–∞—á–µ–Ω–Ω—è –≤ –º–∞—Å–∏–≤—ñ.
 * 1. –°—Ç–≤–æ—Ä—é—î–º–æ –∑–º—ñ–Ω–Ω—É –≤ —è–∫—É –∑–∞–ø–∏—à–µ–º—É —Ä–µ–∑—É–ª—å—Ç–∞—Ç
 * 2. –ü—Ä–∏—Å–≤–æ—î–º–æ —ó—ó –ø–µ—Ä—à–∏–π –µ–ª–µ–º–µ–Ω—Ç –º–∞—Å–∏–≤–∞
 * 3. –ø—Ä–æ—Ö–æ–¥–∏–º–æ —Ü–∏–∫–ª–æ–º –ø–æ –º–∞—Å–∏–≤—É. –ü–æ—Ä—ñ–≤–Ω—é—î–º–æ –∫–æ–∂–Ω–µ –∑–Ω–∞—á–µ–Ω–Ω—è –∑—ñ –∑–Ω–∞—á–µ–Ω–Ω—è–º –∑–º—ñ–Ω–Ω–æ—ó
 * 4. –Ø–∫—â–æ –µ–ª–µ–º–µ–Ω—Ç –Ω–∞ –ø–æ—Ç–æ—á–Ω—ñ–π —ñ—Ç–µ—Ä–∞—Ü—ñ—ó –º–µ–Ω—à–µ –∑–∞ –∑–Ω–∞—á–µ–Ω–Ω—è –∑–º—ñ–Ω–Ω–æ—ó. –ü—Ä–∏—Å–≤–æ—é—î–º–æ –≤ –∑–º—ñ–Ω–Ω—É –∑–Ω–∞—á–µ–Ω–Ω—è –ø–æ—Ç–æ—á–Ω–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç–∞
 * –¢–∞–∫–∏–º —á–∏–Ω–æ–º –ø—Ä–æ–π—à–æ–≤—à–∏ –ø–æ –≤—Å—å–æ–º—É –º–∞—Å–∏–≤—É –∑–Ω–∞–π–¥–µ–º–æ –Ω–∞–π–º–µ–Ω—à–µ —á–∏—Å–ª–æ
 */

//  const numbers = [17, 94, 23, 37, 456, 234, 35, -58];

// let minArray = numbers[0];


// for (let number of numbers) {
//   if (number < minArray) {
//     minArray = number;
//   }
// }

// console.log(minArray);

// task 9

/*
 * –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü–∏—é calculateTotalPrice(items)
 * –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –º–∞—Å—Å–∏–≤ —Ü–µ–Ω (—á–∏—Å–µ–ª) –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏—Ö —Å—É–º–º—É
 */

// const cart = [54, 28, 105, 70, 92, 17, 120, 12, 25, 90];
// let total = 0;

// for (let value of cart) {
//   total += value;
// }

// console.log(total);

// const calculateTotalPrice = function (items) {

//   let total = 0;

// for (const item of items) {
//     total += item;
//   }

// return total;
// }

// console.log(calculateTotalPrice([54, 28, 105, 70, 92, 17, 120, 12, 25, 90]));

//tasl 10

/*
 * –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü–∏—é logItems(items) –¥–ª—è –ø–µ—Ä–µ–±–æ—Ä–∞ –∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –º–∞—Å—Å–∏–≤–∞
 */

// const logItems = function (items) {
//   for (let item of items) {
//     console.log(item)
//   }
// }

// logItems(['Mango', 'Kiwi', 'Poly', 'Ajax']);
// logItems([1, 2, 3, 4, 5]);
// logItems(['–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞', '–Ω–∞—É—à–Ω–∏–∫–∏', '—á–∞—Å—ã']);

//task 11

/*
 * –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü–∏—é findLogin(allLogins, login) –¥–ª—è –ø–æ–∏—Å–∫–∞ –ª–æ–≥–∏–Ω–∞
 * - –ï—Å–ª–∏ –ª–æ–≥–∏–Ω–∞ –Ω–µ—Ç, –≤—ã–≤–µ—Å—Ç–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å [–ª–æ–≥–∏–Ω] –Ω–µ –Ω–∞–π–¥–µ–Ω.'
 * - –ï—Å–ª–∏ –Ω–∞—à–ª–∏ –ª–æ–≥–∏–Ω, –≤—ã–≤–µ—Å—Ç–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å [–ª–æ–≥–∏–Ω] –Ω–∞–π–¥–µ–Ω.'
 */

// const logins = ['m4ngoDoge', 'k1widab3st', 'poly1scute', 'aj4xth3m4n'];

// const findLogin = function (allLogins, loginToFind) {
//   for (const login of allLogins) {
//     if (login === loginToFind) {
//       return `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${loginToFind} –Ω–∞–π–¥–µ–Ω.`;
//     }
//   }

//   return `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${loginToFind} –Ω–µ –Ω–∞–π–¥–µ–Ω.`;

// }

// const findLogin = function (allLogins, loginToFind) {
//  return allLogins.includes(loginToFind)
//  ? `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${loginToFind} –Ω–∞–π–¥–µ–Ω.`
//  : `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${loginToFind} –Ω–µ –Ω–∞–π–¥–µ–Ω.`;

// }


// console.log(findLogin(logins, 'avocod3r'));
// console.log(findLogin(logins, 'k1widab3st'));
// console.log(findLogin(logins, 'jam4l'));
// console.log(findLogin(logins, 'poly1scute'));

//task 12

/*
 * –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü–∏—é findSmallesNumber(numbers) –¥–ª—è –ø–æ–∏—Å–∫–∞ —Å–∞–º–æ–≥–æ –º–∞–ª–µ–Ω—å–∫–æ–≥–æ —á–∏—Å–ª–∞ –≤ –º–∞—Å—Å–∏–≤–µ,
 * –ø—Ä–∏ —É—Å–ª–æ–≤–∏–∏ —á—Ç–æ —á–∏—Å–ª–∞ —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ (–Ω–µ –ø–æ–≤—Ç–æ—Ä—è—é—Ç—Å—è).
 */

// const findSmallesNumber = function (numbers) {
//   let minNumber = numbers[0];

//   for (const number of numbers) {
//     if (number < minNumber) {
//       minNumber = number;
//     }
//   }

//   return minNumber;
// }

// console.log(findSmallesNumber([3, 8, 12, -2, 15])); // -2
// console.log(findSmallesNumber([100, 54, 8, 12, 47])); // 8
// console.log(findSmallesNumber([7, 21, 84, 15, 4])); // 4

//task 13

/*
 * –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü–∏—é changeCase(string) –∫–æ—Ç–æ—Ä–∞—è –∑–∞–º–µ–Ω—è–µ—Ç —Ä–µ–≥–∏—Å—Ç—Ä
 * –∫–∞–∂–¥–æ–≥–æ —Å–∏–º–≤–æ–ª–∞ –≤ —Å—Ç—Ä–æ–∫–µ –Ω–∞ –ø—Ä–æ—Ç–∏–≤–æ–ø–æ–ª–æ–∂–Ω—ã–π.
 * –ù–∞–ø—Ä–∏–º–µ—Ä, –µ—Å–ª–∏ —Å—Ç—Ä–æ–∫–∞ ¬´JavaScript¬ª, —Ç–æ –Ω–∞ –≤—ã—Ö–æ–¥–µ –¥–æ–ª–∂–µ–Ω–∞ –±—ã—Ç—å —Å—Ç—Ä–æ–∫–∞ ¬´jAVAsCRIPT¬ª.
 */

// const changeCase = function (string) {
//   const letters = string.split('');
//   let invertedString = '';

//   for (const letter of letters) {
//     const isInLowerCase = letter === letter.toLowerCase();

//     invertedString += isInLowerCase
//       ? letter.toUpperCase()
//       : letter.toLowerCase();
//   }

//   return invertedString;
// }

// console.log(changeCase('qweRTY')); // QWErty
// console.log(changeCase('mAnGo')); // MaNgO
// console.log(changeCase('AjAx')); // aJaX

// task 14

/*
 * –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü–∏—é slugify(string) –∫–æ—Ç–æ—Ä–∞—è –ø–æ–ª—É—á–∞–µ—Ç —Å—Ç—Ä–æ–∫—É –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç URL-slug
 * –°—Ç—Ä–æ–∫–∞ —Å–æ—Å—Ç–æ–∏—Ç —Ç–æ–ª—å–∫–æ –∏–∑ –±—É–∫–≤ –∏ –ø—Ä–æ–±–µ–ª–æ–≤
 */

// const slugify = function (string) {
//   const normalizedString = string.toLowerCase();

//   const words = normalizedString.split(" ");

//   const slug = words.join('-');
//   return slug;

//   return string.toLowerCase().split(' ').join('-');
// }

// console.log(slugify('Top 10 benefits of React framework'));
// console.log(slugify('Azure Static Web Apps are Awesome'));
// console.log(slugify('Technical writing tips for non-native English speakers'));

// task 15

/* repeta
 * –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü–∏—é filterNumbers(array [, number1, ...]) –∫–æ—Ç–æ—Ä–∞—è:
 * - –ø–µ—Ä–≤—ã–º –∞—Ä–≥—É–º–µ–Ω—Ç–æ–º –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –º–∞—Å—Å–∏–≤ —á–∏—Å–µ–ª
 * - –ø–æ—Å–ª–µ –ø–µ—Ä–≤–æ–≥–æ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥—Ä—É–≥–∏—Ö –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∫–æ—Ç–æ—Ä—ã–µ –±—É–¥—É—Ç —á–∏—Å–ª–∞–º–∏.
 * - –§—É–Ω–∫—Ü–∏—è –¥–æ–ª–∂–Ω–∞ –≤–µ—Ä–Ω—É—Ç—å –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤, –≤ –∫–æ—Ç–æ—Ä–æ–º –±—É–¥—É—Ç —Ç–æ–ª—å–∫–æ —Ç–µ –∞—Ä–≥—É–º–µ–Ω—Ç—ã, –Ω–∞—á–∏–Ω–∞—è —Å–æ –≤—Ç–æ—Ä–æ–≥–æ,
 *   –¥–ª—è –∫–æ—Ç–æ—Ä—ã—Ö –µ—Å—Ç—å –∞–Ω–∞–ª–æ–≥ –≤ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–º –º–∞—Å—Å–∏–≤–µ.
 */

// const filterNumbers = function (array, ...args) {
//   console.log('array: ', array);
//   console.log('args: ', args);

//   const uniqueElements = [];

//   for (const elements of array) {
//     if (args.includes(elements)) {
//       uniqueElements.push(elements);

//       console.log(`${elements} –µ—Å—Ç—å –≤–µ–∑–¥–µ!`);
//     }
//   }
//   return uniqueElements;
// }

// console.log(filterNumbers([1, 2, 3, 4, 5], 10, 15, 2, 3, 8)); // [2, 3]
// console.log(filterNumbers([10, 15, 25, 30], 23, 30, 18, 15)); // [30, 15]
// console.log(filterNumbers([100, 200, 300, 400, 500], 7, 12, 200, 64)); // [200]

//Bardachov
// task 16

/**
 * Task 1 - –Ü–Ω–¥–µ–∫—Å –º–∞—Å–∏ —Ç—ñ–ª–∞.
 * –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü—ñ—é `calcBMI(weight, height)` —è–∫–∞ —Ä–æ–∑—Ä–∞—Ö–æ–≤—É—î —Ç–∞ –ø–æ–≤–µ—Ä—Ç–∞—î
 * —ñ–Ω–¥–µ–∫—Å –º–∞—Å–∏ —Ç—ñ–ª–∞. –î–ª—è —Ü—å–æ–≥–æ –Ω–µ–æ–±—Ö—ñ–¥–Ω–æ —Ä–æ–∑–¥—ñ–ª–∏—Ç–∏ –≤–∞–≥—É –≤ –∫—ñ–ª–æ–≥—Ä–∞–º–∞—Ö –Ω–∞
 * –∫–≤–∞–¥—Ä–∞—Ç –≤–∏—Å–æ—Ç–∏ –ª—é–¥–∏–Ω–∏ –≤ –º–µ—Ç—Ä–∞—Ö.
 * 
 * –Ü–Ω–¥–µ–∫—Å –º–∞—Å–∏ —Ç—ñ–ª–∞ –Ω–µ–æ–±—Ö—ñ–¥–Ω–æ –æ–∫—Ä—É–≥–ª–∏—Ç–∏ –¥–æ –æ–¥–Ω—ñ—î—ó —Ü–∏—Ñ—Ä–∏ –ø—ñ—Å–ª—è –∫–æ–º–∏
 */

// 1) –ó–∞–ø–∏—Ç–∞—Ç–∏ –≤–≤–µ—Å—Ç–∏ –≤–∞–≥—É —ñ –∑—Ä—ñ—Å - prompt
// 2) —Å—Ç–≤–æ—Ä–∏—Ç–∏ –ø—É—Å—Ç—É —Ñ—É–Ω–∫—Ü—ñ—é —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫—É —ñ–Ω–¥–µ–∫—Å—É –º–∞—Å–∏ - function
// 3) –∑–∞–¥–∞—Ç–∏ —Ñ—É–Ω–∫—Ü—ñ—ó –ø–∞—Ä–∞–º–µ—Ç—Ä–∏ –≤–∞–≥–∏ —ñ –∑—Ä–æ—Å—Ç—É - (weight, height)
// 4) —Ä–æ–∑—Ä–∞—Ö—É–≤–∞—Ç–∏ —ñ–Ω–¥–µ–∫—Å –º–∞—Å–∏. - Math.pow()
// 5) –ø–æ–≤–µ—Ä–Ω—É—Ç–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç - return
// 6) –æ–∫—Ä—É–≥–ª–∏—Ç–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –¥–æ –æ–¥–Ω—ñ—î —Ü–∏—Ñ—Ä–∏ –ø—ñ—Å–ª—è –∫–æ–º–∏ toFixed(1) 

// const weight = prompt('–í–≤–µ–¥—ñ—Ç—å –≤–∞—à—É –≤–∞–≥—É –≤ –∫–≥');
// const height = prompt('–í–≤–µ–¥—ñ—Ç—å –≤–∞—à –∑—Ä—ñ—Å—Ç –≤ –º–µ—Ç—Ä–∞—Ö');


// const calcBMI = function (weightU, heightU) { 
// const heightPow = Math.pow(heightU, 2);
// const result = weightU / heightPow;

// return result.toFixed(1);
// }

/** 
 * –°—Ç–≤–æ—Ä–∏–ª–∏ –æ–∫—Ä–µ–º—É —Ñ—É–Ω–∫—Ü—ñ—é —è–∫–∞ –Ω–∞ –æ—Å–Ω–æ–≤—ñ –ø–æ—Ä–∞—Ö–æ–≤–∞–Ω–æ–≥–æ —ñ–Ω–¥–µ–∫—Å–∞ –º–∞—Å–∏ —Ç—ñ–ª–∞, 
 * –≤–∏–≤–æ–¥–µ –≤ –∫–æ–Ω—Å–æ–ª—å, —î –Ω–∞–¥–º—ñ—Ä–Ω–∞ –≤–∞–≥–∞ —á–∏ –Ω–µ–º–∞
 * */

// const validateBMI = function (bmi) {
//   if (bmi <= 18.5) {
//     console.log('–Ω–µ–¥–æ—Å—Ç–∞—Ç–Ω—è –º–∞—Å–∞')
//   } else if (bmi <= 24.9) {
//     console.log('–Ω–æ—Ä–º–∞')
//   } else {
//     console.log('–Ω–∞–¥–ª–∏—à–∫–æ–≤–∞ –º–∞—Å–∞')
//   }

// }

//  const result = calcBMI(weight, height);
//  console.log(result);

//  validateBMI(result);

// console.log(calcBMI(80, 1.75))
// console.log(calcBMI(70, 1.85))
// console.log(calcBMI(100, 1.55))
// console.log(calcBMI(90, 1.8))


// task 17

/**
 * –ö–æ–ª–µ–∫—Ü—ñ—è –∫—É—Ä—Å—ñ–≤.
 * –ù–∞–ø–∏—à—ñ—Ç—å —Ñ—É–Ω–∫—Ü—ñ—ó –¥–ª—è —Ä–æ–±–æ—Ç–∏ –∑ –∫–æ–ª–µ–∫—Ü—ñ—î—é –Ω–∞–≤—á–∞–ª—å–Ω–∏—Ö –∫—É—Ä—Å—ñ–≤ `courses`:
 * ['HTML', 'CSS', 'JavaScript', 'React', 'PostgreSQL'];
 * 
 * - `addCourse(name)` - –¥–æ–¥–∞—î –∫—É—Ä—Å –¥–æ –∫—ñ–Ω—Ü—è –∫–æ–ª–µ–∫—Ü—ñ—ó
 * - `removeCourse(name)` - –≤–∏–¥–∞–ª—è—î –∫—É—Ä—Å –∑ –∫–æ–ª–µ–∫—Ü—ñ—ó
 * - `updateCourse(oldName, newName)` - –∑–º—ñ–Ω—é—î —ñ–º'—è –Ω–∞ –Ω–æ–≤–µ
 */

// 1) –î–æ–¥–∞—î–º–æ –∫—É—Ä—Å –¥–æ –∫–æ–ª–µ–∫—Ü—ñ—ó `addCourse`
//   1.1 —Å—Ç–≤–æ—Ä–∏—Ç–∏ —Ñ—É–Ω–∫—Ü—ñ—é –¥–æ–¥–∞–≤–∞–Ω–Ω—è –∫—É—Ä—Å—É - function
//   1.2 –æ–≥–æ–ª–æ—Å–∏—Ç–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä —Ñ—É–Ω–∫—Ü—ñ—ó, —è–∫–∏–π –ø—Ä–∏–π–º–∞—Ç–∏–º–µ –∑–Ω–∞—á–µ–Ω–Ω—è –∞—Ä–≥—É–º–µ–Ω—Ç–∞ –¥–ª—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è
//   1.3 –¥–æ–¥–∞–º–æ –∫—É—Ä—Å –¥–æ –∫–æ–ª–µ–∫—Ü—ñ—ó - push
//   1.4 –ü–æ–≤–µ—Ä–Ω–µ–º–æ –æ–Ω–æ–≤–ª–µ–Ω—É –∫–æ–ª–µ–∫—Ü—ñ—é - return

// 2) –í–∏–¥–∞–ª–∏—Ç–∏ –∫—É—Ä—Å —ñ–∑ –∫–æ–ª–µ–∫—Ü—ñ—ó `removeCourse`
//   2.1 —Å—Ç–≤–æ—Ä–∏—Ç–∏ —Ñ—É–Ω–∫—Ü—ñ—é –≤–∏–¥–∞–ª–µ–Ω–Ω—è –∫—É—Ä—Å—É
//   2.2 –æ–≥–æ–ª–æ—Å–∏—Ç–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä —Ñ—É–Ω–∫—Ü—ñ—ó, —è–∫–∏–π –ø—Ä–∏–π–º–∞—Ç–µ–º–µ –∑–Ω–∞—á–µ–Ω–Ω—è –∞—Ä–≥—É–º–µ–Ω—Ç–∞ –¥–ª—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è 
//   2.3 –ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ —á–∏ —î –∫—É—Ä—Å —É –∫–æ–ª–µ–∫—Ü—ñ—ó - indexOf
//   2.4 –Ø–∫—â–æ —î, –≤–∏–¥–∞–ª—è—î–º–æ - splice
//   2.5 –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ —ñ–∑ —Ñ—É–Ω–∫—Ü—ñ—ó –µ–ª–µ–º–µ–Ω—Ç —è–∫–∏–π –±—É–≤ –≤–∏–¥–∞–ª–µ–Ω–∏–π

// 3) –û–Ω–æ–≤–ª–µ–Ω–Ω—è –∫—É—Ä—Å–∞ `updateCourse`
//   1. –°—Ç–≤–æ—Ä—é—î–º–æ —Ñ—É–Ω–∫—Ü—ñ—é –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –∫—É—Ä—Å—É, —Å—Ç–∞—Ä–µ —ñ–º º—è –∑–∞–º—ñ–Ω—é—î–º–æ –Ω–æ–≤–∏–º
//   2. –î–∞—î–º–æ –¥–≤–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞: —Å—Ç–∞—Ä–µ —ñ–º—è, –Ω–æ–≤–µ —ñ–º—è(oldName, newName)
//   3. –ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ —á–∏ —î –∫—É—Ä—Å —É –∫–æ–ª–µ–∫—Ü—ñ—ó - indexOf
//   4. –Ø–∫—â–æ —î, –∑–∞–ø–∏—Å—É—î–º–æ –Ω–æ–≤–µ –∑–Ω–∞—á–µ–Ω–Ω—è –ø–æ —ñ–Ω–¥–µ–∫—Å—É

const courses = ['HTML', 'CSS', 'JavaScript', 'React', 'PostgreSQL'];

/** –©–æ–± –¥–æ–¥–∞—Ç–∏ —ñ–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏, –∑–∞–ø–∏—Ç—É—î–º–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –≤–≤–µ—Å—Ç–∏ –¥–∞–Ω—ñ - prompt */
const courseName = prompt('–í–≤–µ–¥—ñ—Ç—å –Ω–∞–∑–≤—É –∫—É—Ä—Å—É');
const newName = prompt('–í–≤–µ–¥—ñ—Ç—å –Ω–æ–≤–µ —ñ–º º—è');

const addCourse = function(newCourse) {

  if (courses.includes(newCourse)) {
    console.log('–¢–∞–∫–∏–π –∫—É—Ä—Å –≤–∂–µ —î');
    return // —Ä–∞–Ω–Ω—ñ–π –≤–∏—Ö—ñ–¥ —ñ–∑ —Ñ—É–Ω–∫—Ü—ñ—ó
  }

  courses.push(newCourse);
  return courses; // –ü–∞–º º—è—Ç–∞–π—Ç–µ, —â–æ –∑–º—ñ–Ω–Ω–∞ courses —Ü–µ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ –º–∞—Å–∏–≤!
}

// const result = addCourse(courseName);
// console.log(result);

const removeCourse = function (courseName) {
  
  const index = courses.indexOf(courseName);
  
  if (index === -1) {
    console.log('—Ç–∞–∫–æ–≥–æ –∫—É—Ä—Å—É –Ω–µ–º–∞')
    return
  }
  
  const deletedCourses = courses.splice(index, 1);
  return deletedCourses
}

// const result = removeCourse(courseName);
// console.log(courses);
// console.log(result);

const updateCourse = function (oldName, newName) {
  const index = courses.indexOf(oldName);
  
  if (index === -1) {
    console.log('—Ç–∞–∫–æ–≥–æ –∫—É—Ä—Å—É –Ω–µ–º–∞')
    return
  }

  courses[index] = newName
}

// const result = updateCourse(courseName, newName);
// console.log(courses);
// console.log(result);


/** checkCourseName - —Ñ—É–Ω–∫—Ü—ñ—è –≤ —è–∫—É –º–∏ –≤–∏–Ω–µ—Å–ª–∏ –ø–µ—Ä–µ–≤—ñ—Ä–∫—É –µ–ª–µ–º–Ω—Ç—É –≤ –º–∞—Å–∏–≤—ñ. */
const checkCourseName = function (value) {
  const index = courses.indexOf(value);

  if (index === -1) {
    console.log('—Ç–∞–∫–æ–≥–æ –∫—É—Ä—Å—É –Ω–µ–º–∞')
    return false
  } else {
    console.log('–¢–∞–∫–∏–π –∫—É—Ä—Å –≤–∂–µ —î');
    return true
  }
}


/** –î—É–±–ª—é—é —Ç—ñ —Å–∞–º—ñ —Ñ—É–Ω–∫—Ü—ñ—ó, –∞–ª–µ —Ç–µ–ø–µ—Ä –∑ –≤–∏–∫—Ä–∏—Å—Ç–∞–Ω–Ω—è–º –≤–∏–Ω–µ—Å–µ–Ω–æ—ó –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –≤ –æ–∫—Ä–µ–º—É —Ñ—É–Ω–∫—Ü—ñ—é */
// const addCourse = function(newCourse) {

//   if (checkCourseName(newCourse)) return

//   courses.push(newCourse);
//   return courses;
// }

// const removeCourse = function (courseName) {
  
//   if (!checkCourseName(courseName)) return
  
//   const deletedCourses = courses.splice(index, 1);
//   return deletedCourses
// }

// const updateCourse = function (oldName, newName) {
//   if (!checkCourseName(oldName)) return
//   courses[index] = newName
// }